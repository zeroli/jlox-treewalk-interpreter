// Your first lox program!
print "hello, world!";

true;  // not false
false;  // not *not* false

1234;  // an integer
12.34;  // a decimal number

"I am a string";
"";  // the empty string
"123";  // this is a string, not a number

1  == 2; // false
"cat" != "dog";  // true

314 == "pi";  // false
123 == "123";  // false

!true;  // false
!false;  // true

true and false;  // false.
true and true;  // true.

false or false;  // false.
true or false;  // true.

{
    print "One statement.";
    print "Two statement.";
}

var imAVariable = "here is my value";
var iAmNil;

var breakfast = "bagels";
print breakfast;  // "bagels"
breakfast = "beignets";
print breakfast;  // "beignets"

if (condition) {
    print "yes";
} else {
    print "no";
}

var a = 1;
while (a < 10) {
    print a;
    a = a + 1;
}

for (var a = 1; a < 10; a = a + 1) {
    print a;
}

makeBreakfast(bacon, eggs, toast);
makeBreakfast();

fun printSum(a, b) {
    print a + b;
}

fun addPair(a, b) {
    return a + b;
}

fun identity(a) {
    return a;
}

print identity(addPair)(1, 2);  // prints "3"

fun outerFunction() {
    fun localFunction() {
        print "I'm local!";
    }

    localFunction();
}

fun returnFunction() {
    var outside = "outside";

    fun inner() {
        print outside;
    }

    return inner;
}

var fn = returnFunction();
fn();

class Breakfast {
    cook() {
        print "Eggs a-fryin'!";
    }

    server(who) {
        print "Enjoy your breakfast, " + who + ".";
    }
}

// class is the first-class treated
var someVariable = Breakfast;

someFunction(Breakfast);

var breakfast = Breakfast();
print breakfast;  // "Breakfast instance"

// assignment automatically create it, if it's not present
breakfast.meat = "sausage";
breakfast.bread = "sourdough";

class Breakfast {
    init(meat, bread) {
        this.meat = meat;
        this.bread = bread;
    }

    serve(who) {
        print "Enjoy your " + this.meat + " and " +
            this.bread + ", " + who + ".";
    }
}

var baconAndToast = Breakfast("bacon", "toast");
baconAndToast.serve("Dear Reader");

class Brunch < Breakfast {
    init(meat, bread, drink) {
        super.init(meat, bread);
        this.drink = drink;
    }

    drink() {
        print "How about a bloody mary?";
    }
}
